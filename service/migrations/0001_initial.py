# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
        ('provider', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AutoService',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nn_created_at', models.DateTimeField(auto_now_add=True)),
                ('nn_updated_at', models.DateTimeField(auto_now=True)),
                ('nn_status', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255, db_index=True)),
                ('desc', models.TextField(blank=True)),
                ('price', models.FloatField(default=0)),
                ('fans_cnt', models.IntegerField(default=0)),
                ('like_cnt', models.IntegerField(default=0)),
                ('comment_cnt', models.IntegerField(default=0)),
                ('fav_cnt', models.IntegerField(default=0)),
                ('executor', models.ForeignKey(to='provider.Executor')),
                ('provider', models.ForeignKey(to='provider.Provider')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CosmeticService',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nn_created_at', models.DateTimeField(auto_now_add=True)),
                ('nn_updated_at', models.DateTimeField(auto_now=True)),
                ('nn_status', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255, db_index=True)),
                ('desc', models.TextField(blank=True)),
                ('price', models.FloatField(default=0)),
                ('fans_cnt', models.IntegerField(default=0)),
                ('like_cnt', models.IntegerField(default=0)),
                ('comment_cnt', models.IntegerField(default=0)),
                ('fav_cnt', models.IntegerField(default=0)),
                ('executor', models.ForeignKey(to='provider.Executor')),
                ('provider', models.ForeignKey(to='provider.Provider')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FlowerService',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nn_created_at', models.DateTimeField(auto_now_add=True)),
                ('nn_updated_at', models.DateTimeField(auto_now=True)),
                ('nn_status', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255, db_index=True)),
                ('desc', models.TextField(blank=True)),
                ('price', models.FloatField(default=0)),
                ('fans_cnt', models.IntegerField(default=0)),
                ('like_cnt', models.IntegerField(default=0)),
                ('comment_cnt', models.IntegerField(default=0)),
                ('fav_cnt', models.IntegerField(default=0)),
                ('style', models.IntegerField(default=0, choices=[(0, b'DEFAULT')])),
                ('executor', models.ForeignKey(to='provider.Executor')),
                ('provider', models.ForeignKey(to='provider.Provider')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HallService',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nn_created_at', models.DateTimeField(auto_now_add=True)),
                ('nn_updated_at', models.DateTimeField(auto_now=True)),
                ('nn_status', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255, db_index=True)),
                ('desc', models.TextField(blank=True)),
                ('price', models.FloatField(default=0)),
                ('fans_cnt', models.IntegerField(default=0)),
                ('like_cnt', models.IntegerField(default=0)),
                ('comment_cnt', models.IntegerField(default=0)),
                ('fav_cnt', models.IntegerField(default=0)),
                ('tall', models.FloatField(default=0)),
                ('size', models.FloatField(default=0)),
                ('address', models.TextField(blank=True)),
                ('best_table_cnt', models.IntegerField(default=0)),
                ('mini_table_cnt', models.IntegerField(default=0)),
                ('max_table_cnt', models.IntegerField(default=0)),
                ('has_led', models.BooleanField(default=True)),
                ('has_sound_equipment', models.BooleanField(default=True)),
                ('wedding_cnt', models.IntegerField(default=0)),
                ('executor', models.ForeignKey(to='provider.Executor')),
                ('provider', models.ForeignKey(to='provider.Provider')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HostService',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nn_created_at', models.DateTimeField(auto_now_add=True)),
                ('nn_updated_at', models.DateTimeField(auto_now=True)),
                ('nn_status', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255, db_index=True)),
                ('desc', models.TextField(blank=True)),
                ('price', models.FloatField(default=0)),
                ('fans_cnt', models.IntegerField(default=0)),
                ('like_cnt', models.IntegerField(default=0)),
                ('comment_cnt', models.IntegerField(default=0)),
                ('fav_cnt', models.IntegerField(default=0)),
                ('style', models.IntegerField(default=0, choices=[(0, b'DEFAULT')])),
                ('executor', models.ForeignKey(to='provider.Executor')),
                ('provider', models.ForeignKey(to='provider.Provider')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HotelService',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nn_created_at', models.DateTimeField(auto_now_add=True)),
                ('nn_updated_at', models.DateTimeField(auto_now=True)),
                ('nn_status', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255, db_index=True)),
                ('desc', models.TextField(blank=True)),
                ('price', models.FloatField(default=0)),
                ('fans_cnt', models.IntegerField(default=0)),
                ('like_cnt', models.IntegerField(default=0)),
                ('comment_cnt', models.IntegerField(default=0)),
                ('fav_cnt', models.IntegerField(default=0)),
                ('style', models.IntegerField(default=0, choices=[(0, b'DEFAULT')])),
                ('city', models.IntegerField(null=True)),
                ('region', models.IntegerField(null=True)),
                ('location', models.IntegerField(null=True)),
                ('address', models.TextField(blank=True)),
                ('hall', models.IntegerField(null=True)),
                ('executor', models.ForeignKey(to='provider.Executor')),
                ('provider', models.ForeignKey(to='provider.Provider')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='LightService',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nn_created_at', models.DateTimeField(auto_now_add=True)),
                ('nn_updated_at', models.DateTimeField(auto_now=True)),
                ('nn_status', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255, db_index=True)),
                ('desc', models.TextField(blank=True)),
                ('price', models.FloatField(default=0)),
                ('fans_cnt', models.IntegerField(default=0)),
                ('like_cnt', models.IntegerField(default=0)),
                ('comment_cnt', models.IntegerField(default=0)),
                ('fav_cnt', models.IntegerField(default=0)),
                ('executor', models.ForeignKey(to='provider.Executor')),
                ('provider', models.ForeignKey(to='provider.Provider')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='LocationService',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nn_created_at', models.DateTimeField(auto_now_add=True)),
                ('nn_updated_at', models.DateTimeField(auto_now=True)),
                ('nn_status', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255, db_index=True)),
                ('desc', models.TextField(blank=True)),
                ('price', models.FloatField(default=0)),
                ('fans_cnt', models.IntegerField(default=0)),
                ('like_cnt', models.IntegerField(default=0)),
                ('comment_cnt', models.IntegerField(default=0)),
                ('fav_cnt', models.IntegerField(default=0)),
                ('executor', models.ForeignKey(to='provider.Executor')),
                ('provider', models.ForeignKey(to='provider.Provider')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PhotoService',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nn_created_at', models.DateTimeField(auto_now_add=True)),
                ('nn_updated_at', models.DateTimeField(auto_now=True)),
                ('nn_status', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255, db_index=True)),
                ('desc', models.TextField(blank=True)),
                ('price', models.FloatField(default=0)),
                ('fans_cnt', models.IntegerField(default=0)),
                ('like_cnt', models.IntegerField(default=0)),
                ('comment_cnt', models.IntegerField(default=0)),
                ('fav_cnt', models.IntegerField(default=0)),
                ('executor', models.ForeignKey(to='provider.Executor')),
                ('provider', models.ForeignKey(to='provider.Provider')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SoundService',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nn_created_at', models.DateTimeField(auto_now_add=True)),
                ('nn_updated_at', models.DateTimeField(auto_now=True)),
                ('nn_status', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255, db_index=True)),
                ('desc', models.TextField(blank=True)),
                ('price', models.FloatField(default=0)),
                ('fans_cnt', models.IntegerField(default=0)),
                ('like_cnt', models.IntegerField(default=0)),
                ('comment_cnt', models.IntegerField(default=0)),
                ('fav_cnt', models.IntegerField(default=0)),
                ('executor', models.ForeignKey(to='provider.Executor')),
                ('provider', models.ForeignKey(to='provider.Provider')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
    ]
